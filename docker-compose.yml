version: '3'

volumes:
  certs:
  conf:
  html:
  mailman:

services:
  db:
    image: postgres:12.1-alpine
    container_name: db
    restart: always
    env_file:
      - .env
    volumes:
      - /opt/db:/var/lib/postgresql/data
      - ./db/init-databases.sh:/docker-entrypoint-initdb.d/init.sh

  redis:
    image: redis:5.0.7-alpine
    container_name: redis
    restart: always

  nginx:
    image: nginx:1.17.6-alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  gen:
    image: jwilder/docker-gen:0.7.0
    container_name: nginx-proxy-gen
    depends_on:
      - collabora
      - git
      - mailman-web
      - nextcloud
      - nginx
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d
      - ./nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-letsencrypt
    depends_on:
      - gen
      - nginx
    environment:
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx-proxy/vhost.d:/etc/nginx/vhost.d

  nextcloud:
    build: nextcloud
    container_name: nextcloud
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - /opt/nextcloud:/var/www/html/data
    environment:
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - LETSENCRYPT_HOST=${HOST_NEXTCLOUD}
      - MAIL_FROM_ADDRESS=${SMTP_LOGIN}
      - POSTGRES_DB=${POSTGRES_DATABASE_NEXCLOUD}
      - POSTGRES_HOST=db
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_NAME=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=tls
      - VIRTUAL_HOST=${HOST_NEXTCLOUD}

  collabora:
    image: collabora/code
    container_name: collabora
    restart: always
    depends_on:
      - nextcloud
    restart: always
    cap_add:
      - MKNOD
    environment:
      - domain=${COLLABORA_DOMAIN}
      - username=${COLLABORA_USER}
      - password=${COLLABORA_PASSWORD}
      - dictionaries=${COLLABORA_DICTIONARIES}
      - VIRTUAL_HOST=${HOST_COLLABORA}
      - VIRTUAL_PORT=9980
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${HOST_COLLABORA}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
    expose:
      - 9980

  coturn:
    build: coturn
    container_name: coturn
    restart: always
    env_file: '.env'
    network_mode: 'host'

  git:
    image: gitea/gitea:1.10.0
    container_name: git
    restart: always
    depends_on:
      - db
    volumes:
      - /opt/git:/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - DB_HOST=db
      - DB_NAME=${POSTGRES_DATABASE_GIT}
      - DB_PASSWD=${POSTGRES_PASSWORD}
      - DB_TYPE=postgres
      - DB_USER=${POSTGRES_USER}
      - DISABLE_REGISTRATION=true
      - HTTP_PORT=3000
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - LETSENCRYPT_HOST=${HOST_GIT}
      - RUN_MODE=prod
      - SSH_DOMAIN=${HOST_GIT}
      - SSH_LISTEN_PORT=2222
      - USER_GID=1000
      - USER_UID=1000
      - VIRTUAL_HOST=${HOST_GIT}
      - VIRTUAL_PORT=3000
    ports:
      - "127.0.0.1:2222:22"

  postfix:
    image: turgon37/smtp-relay:latest
    container_name: postfix
    volumes:
      - certs:/etc/nginx/certs
      - mailman:/opt/mailman/var/data
    environment:
      - RELAY_POSTMASTER=${POSTFIX_POSTMASTER}
      - RELAY_MYHOSTNAME=${HOST_MAILMAN}
      - RELAY_MYDOMAIN=${HOST}
      - RELAY_MYNETWORKS=127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
      - RELAY_HOST=[${SMTP_HOST}]:${SMTP_PORT}
      - RELAY_MODE=ALLOW_SASLAUTH_NODOMAIN
      - RELAY_LOGIN=${SMTP_LOGIN}
      - RELAY_PASSWORD=${SMTP_PASSWORD}
      - RELAY_USE_TLS=yes
      - RELAY_TLS_VERIFY=encrypt
      - RELAY_TLS_CA=/etc/nginx/certs
      - 'RELAY_EXTRAS_SETTINGS=owner_request_special=no unknown_local_recipient_reject_code=550 transport_maps=regexp:/opt/mailman/var/data/postfix_lmtp local_recipient_maps=regexp:/opt/mailman/var/data/postfix_lmtp relay_domains=regexp:/opt/mailman/var/data/postfix_domains inet_interfaces=localhost smtp_tls_wrappermode=yes'

  mailman:
    image: maxking/mailman-core:latest
    container_name: mailman
    depends_on:
      - db
      - postfix
    volumes:
      - mailman:/opt/mailman/var/data
      - ./mailman/mailman-extra.cfg:/opt/mailman/mailman-extra.cfg
    environment:
      - DATABASE_CLASS=mailman.database.postgresql.PostgreSQLDatabase
      - DATABASE_TYPE=postgres
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DATABASE_MAILMAN}
      - HYPERKITTY_API_KEY=${MAILMAN_HYPERKITTY_API_KEY}
      - MTA=postfix

  mailman-web:
    image: maxking/postorius:latest
    container_name: mailman-web
    depends_on:
      - db
      - mailman
    volumes:
      - ./mailman/settings_local.py:/opt/mailman-web-data/settings_local.py
    environment:
      - DATABASE_TYPE=postgres
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DATABASE_MAILMAN}
      - HYPERKITTY_API_KEY=${MAILMAN_HYPERKITTY_API_KEY}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - LETSENCRYPT_HOST=${HOST_MAILMAN}
      - MAILMAN_ADMIN_EMAIL=${MAILMAN_ADMIN_EMAIL}
      - MAILMAN_ADMIN_USER=${MAILMAN_ADMIN_USER}
      - SECRET_KEY=${MAILMAN_SECRET_KEY}
      - SERVE_FROM_DOMAIN=${HOST_MAILMAN}
      - UWSGI_STATIC_MAP=/static=/opt/mailman-web-data/static
      - VIRTUAL_HOST=${HOST_MAILMAN}
      - VIRTUAL_PORT=8080
      - VIRTUAL_PROTO=uwsgi
